// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`GreengrassFleetProvisioningStack Snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-eu-central-1",
          "S3Key": "arbitrary-file.ext",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testcert2B8123E2": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "testconstructfunctionD8151FD6": {
      "DependsOn": [
        "testconstructfunctionServiceRoleDefaultPolicy274CC470",
        "testconstructfunctionServiceRole04DFC038",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-eu-central-1",
          "S3Key": "arbitrary-file.ext",
        },
        "FunctionName": "greengrass-fleet-provisioning-gg-fleet-provisioning",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "testconstructfunctionServiceRole04DFC038",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testconstructfunctionLogRetention34DBB3F4": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "testconstructfunctionD8151FD6",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testconstructfunctionServiceRole04DFC038": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testconstructfunctionServiceRoleDefaultPolicy274CC470": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iot:CreateKeysAndCertificate",
                "iot:DescribeEndpoint",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "iam:PassRole",
                "iot:DeleteCertificate",
                "iot:UpdateCertificate",
                "kms:GenerateDataKey",
                "s3:DeleteObject",
                "s3:PutObject",
                "ssm:DeleteParameter",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "testcert2B8123E2",
                      },
                      "/greengrass-fleet-provisioning*",
                    ],
                  ],
                },
                "arn:aws:iam::111111111111:role/greengrass-fleet-provisioning-*",
                "arn:aws:iot:eu-central-1:111111111111:cert/*",
                "arn:aws:ssm:eu-central-1:111111111111:parameter/greengrass-fleet-provisioning*",
                "arn:aws:kms:eu-central-1:111111111111:key/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testconstructfunctionServiceRoleDefaultPolicy274CC470",
        "Roles": [
          {
            "Ref": "testconstructfunctionServiceRole04DFC038",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testconstructgreengrassfleetprovisioningcr9970C862": {
      "Properties": {
        "CertificateBucketName": {
          "Ref": "testcert2B8123E2",
        },
        "CertificatePrefix": "greengrass-fleet-provisioning",
        "ResourcePrefix": "greengrass-fleet-provisioning",
        "ServiceTimeout": 60,
        "ServiceToken": {
          "Fn::GetAtt": [
            "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEvent0217D959",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
    },
    "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEvent0217D959": {
      "DependsOn": [
        "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRoleDefaultPolicy964610B4",
        "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRole68DA8387",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-eu-central-1",
          "S3Key": "arbitrary-file.ext",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test-common/test-construct/greengrass-fleet-provisioning-cr-lambda-provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "testconstructfunctionD8151FD6",
                "Arn",
              ],
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "testconstructfunctionD8151FD6",
              },
              "-provider",
            ],
          ],
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRole68DA8387",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventLogRetentionF1927DD2": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEvent0217D959",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRole68DA8387": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRoleDefaultPolicy964610B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testconstructfunctionD8151FD6",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testconstructfunctionD8151FD6",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:GetFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testconstructfunctionD8151FD6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRoleDefaultPolicy964610B4",
        "Roles": [
          {
            "Ref": "testconstructgreengrassfleetprovisioningcrlambdaproviderframeworkonEventServiceRole68DA8387",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testconstructgreengrassfleetprovisioningggfleetprovisioningrole2957E081": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration",
        ],
        "Path": "/",
        "RoleName": "greengrass-fleet-provisioning-gg-fleet-provisioning",
      },
      "Type": "AWS::IAM::Role",
    },
    "testconstructgreengrassfleetprovisioningggfleetprovisioningroleDefaultPolicy036FF1B6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iot:DescribeCertificate",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testconstructgreengrassfleetprovisioningggfleetprovisioningroleDefaultPolicy036FF1B6",
        "Roles": [
          {
            "Ref": "testconstructgreengrassfleetprovisioningggfleetprovisioningrole2957E081",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testconstructgreengrassfleetprovisioningggprovisioningclaimpolicy010540AD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iot:Connect",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "iot:Publish",
                "iot:Receive",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iot:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/$aws/certificates/create/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iot:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":topic/$aws/provisioning-templates/greengrass-fleet-provisioning-gg-fleet-provisioning/provision/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "iot:Subscribe",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iot:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/$aws/certificates/create/*",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iot:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":topicfilter/$aws/provisioning-templates/greengrass-fleet-provisioning-gg-fleet-provisioning/provision/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "greengrass-fleet-provisioning-gg-fleet-provisioning",
      },
      "Type": "AWS::IoT::Policy",
    },
    "testconstructgreengrassfleetprovisioningggprovisioningtemplate8CE8A453": {
      "Properties": {
        "Description": "Fleet Provisioning template for AWS IoT Greengrass.",
        "Enabled": true,
        "ProvisioningRoleArn": {
          "Fn::GetAtt": [
            "testconstructgreengrassfleetprovisioningggfleetprovisioningrole2957E081",
            "Arn",
          ],
        },
        "TemplateBody": "
        {
          "Parameters": {
            "ThingName": {
              "Type": "String"
            },
            "ThingGroupName": {
              "Type": "String"
            },
            "AWS::IoT::Certificate::Id": {
              "Type": "String"
            }
          },
          "Resources": {
            "MyGreengrassThing": {
              "OverrideSettings": {
                "AttributePayload": "REPLACE",
                "ThingGroups": "REPLACE",
                "ThingTypeName": "REPLACE"
              },
              "Properties": {
                "AttributePayload": {},
                "ThingGroups": [
                  {
                    "Ref": "ThingGroupName"
                  }
                ],
                "ThingName": {
                  "Ref": "ThingName"
                }
              },
              "Type": "AWS::IoT::Thing"
            },
            "MyGreengrassPolicy": {
              "Properties": {
                "PolicyName": "greengrass-fleet-provisioning-gg-thing"
              },
              "Type": "AWS::IoT::Policy"
            },
            "MyGreengrassCertificate": {
              "Properties": {
                "CertificateId": {
                  "Ref": "AWS::IoT::Certificate::Id"
                },
                "Status": "Active"
              },
              "Type": "AWS::IoT::Certificate"
            }
          }
        }",
        "TemplateName": "greengrass-fleet-provisioning-gg-fleet-provisioning",
      },
      "Type": "AWS::IoT::ProvisioningTemplate",
    },
    "testconstructgreengrassfleetprovisioningggthingpolicy5FB68BDC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iot:Connect",
                "iot:Publish",
                "iot:Subscribe",
                "iot:Receive",
                "greengrass:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iot:AssumeRoleWithCertificate",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testconstructgreengrassfleetprovisioningggtokenexchangealiasE50BA006",
                  "RoleAliasArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "greengrass-fleet-provisioning-gg-thing",
      },
      "Type": "AWS::IoT::Policy",
    },
    "testconstructgreengrassfleetprovisioningggtokenexchangealiasE50BA006": {
      "Properties": {
        "RoleAlias": "greengrass-fleet-provisioning-gg-token-exchange",
        "RoleArn": {
          "Fn::GetAtt": [
            "testconstructgreengrassfleetprovisioningggtokenexchangerole9A6DAC1F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::IoT::RoleAlias",
    },
    "testconstructgreengrassfleetprovisioningggtokenexchangerole9A6DAC1F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "credentials.iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Greengrass core devices token exchange role",
        "Path": "/",
        "RoleName": "greengrass-fleet-provisioning-gg-token-exchange",
      },
      "Type": "AWS::IAM::Role",
    },
    "testconstructgreengrassfleetprovisioningggtokenexchangeroleDefaultPolicyB1059AFC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iot:DescribeCertificate",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testconstructgreengrassfleetprovisioningggtokenexchangeroleDefaultPolicyB1059AFC",
        "Roles": [
          {
            "Ref": "testconstructgreengrassfleetprovisioningggtokenexchangerole9A6DAC1F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testconstructgreengrassprovisioningclaimpolicyattachmentEFB7C9E8": {
      "Properties": {
        "PolicyName": "greengrass-fleet-provisioning-gg-fleet-provisioning",
        "Principal": {
          "Fn::GetAtt": [
            "testconstructgreengrassfleetprovisioningcr9970C862",
            "certificateArn",
          ],
        },
      },
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
